
#include C:\Users\user\Documents\THESIS\THESIS2021\Code\Clustering.run;
include C:\Users\user\Documents\THESIS\THESIS2021\Code\ClusterLimits\ClusteringLimit.run;

#Create Set of Clusters, iterate over set - if card(C1) >0 => solve else continue


repeat{

            display CD, ic, iw >> ("C:\Users\user\Documents\THESIS\Outputs\RCP20Testing\RCP_20_Testing_" & k & ".txt");


            for {y in {1..nc}}{
            let C := A;
            if card(CD[y]) = 0 then continue;
            else {
            let C := CD[y];
            
            problem NC_ACRP;
            solve NC_ACRP;
            let totaltime := totaltime + _solve_time;

            for {(i,j) in CP}{
            let test1[i,j] := xr0[i,j] * vrx[i,j] + yr0[i,j] * vry[i,j];
            let test2[i,j] := ((vrx[i,j])**2) * a[i,j] + (vry[i,j]**2) * b[i,j] - vrx[i,j]*vry[i,j]*c[i,j];
            }

            display q,theta,Obj;

            for {i in C}{
                let totalobjective := totalobjective + Obj;
            }
            }
            }
            let C := A;

            #include C:\Users\user\Documents\THESIS\THESIS2021\Code\Clustering.run;
            include C:\Users\user\Documents\THESIS\THESIS2021\Code\ClusterLimits\ClusteringLimit.run;

            let clustercon := 0;

            for {y in {1..nc}}{
            let C := A;
            if card(CD[y]) = 0 then let clustercon := clustercon + 1;
            }
            let numloop := numloop + 1;

            for {y in {1..nc}}{
            let C := A;
            if card(CD[y]) > 0 then display k,y, numloop >> ("C:\Users\user\Documents\THESIS\Outputs\RCP20Testing\RCP_20_Testing_" & k & ".txt");
            }

            if numloop = 8 then {
            print "Max Loops Reached", totaltime >> ("C:\Users\user\Documents\THESIS\Outputs\RCP20Testing\RCP_20_Testing_" & k & ".txt");
            print totalobjective >> ("C:\Users\user\Documents\THESIS\Outputs\RCP20Testing\RCP_20_Testing_" & k & ".txt");
            let totalobjective := 0;
            let totaltime := 0;
            break;
            }

            if clustercon = 5 then {
            print ("RCP_20_" & k & " - All Clusters Solved") >> ("C:\Users\user\Documents\THESIS\Outputs\RCP20Testing\RCP_20_Testing_" & k & ".txt"); 
            print totaltime," seconds" >> ("C:\Users\user\Documents\THESIS\Outputs\RCP20Testing\RCP_20_Testing_" & k & ".txt");
            print totalobjective >> ("C:\Users\user\Documents\THESIS\Outputs\RCP20Testing\RCP_20_Testing_" & k & ".txt");
            let totalobjective := 0;
            let totaltime := 0;
            break;
            }
            
};








#display test1, test2;
